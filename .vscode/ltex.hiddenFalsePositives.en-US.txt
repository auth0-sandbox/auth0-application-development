{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QidpLogout defaults to false, but we want users to log out of the Auth0 tenant.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qexpress-openid-connect is built as a CommonJS module so, we have to destructure it into the components that we need with this statement.\\E$"}
{"rule":"MISSING_GENITIVE","sentence":"^\\QNodeJS packages are downloaded and installed to the node_modules folder in the project.\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QIt really does not matter what the value is, just that we externalize it so we can randomly change the value whenever we want.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QNOTE: we left the lines in the configuration as comments for issuerBaseURL, baseURL, client ID, and secret (the session cookie secret).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QNOTE: we left the lines in the configuration as comments for issuerBaseURL, baseURL, clientID, and secret (the session cookie secret).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QclientSecret is not automatically read but necessary for Authorization Code flow.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QThe function is generated by calling the auth function from the express-openid-connect sdk.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QRetrieving the values from the .env file is handled by calling config from the dotenv module, so add this statement after deconstructing auth0Express:\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QExpress is similar to Flask or FastAPI in Python, Spring in Java, or Kestrel (part of ASP.NET Core) in .NET.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QAlong the way the features of the Auth0 express-openid-connect SDK will be explored; the basic functionality of Auth0 Web Application SDKs is similar across all the platforms.\\E$"}
